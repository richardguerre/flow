"use strict";const y=t=>({plugin:t}),T="post-your-plan",_=`Plan for today

{{#tasks}}<ul>
<li><p>{{slack-status}} {{title}}</p></li>
</ul>{{/tasks}}
`,p="account-tokens",A="templates",E=y(t=>{const g="update-task-status",m=async()=>{const e=await t.store.getPluginItem(p);if(!e)throw new t.GraphQLError("User not authenticated.",{extensions:{code:"NOT_AUTHENTICATED",userFriendlyMessage:"You are not authenticated and will need to connect your Slack account(s) first."}});return e.value},k={TODO:"",DONE:"✅",CANCELED:"❌"},f=async e=>{const n=t.parseHtml(e).querySelectorAll("slack-status").map(s=>{var o;const a=(o=t.decodeGlobalId(s.attributes["data-taskId"]))==null?void 0:o.id;return a?parseInt(a):null}).filter(s=>s!==null);return await t.prisma.task.findMany({where:{id:{in:n}}}).then(s=>new Map(s.map(a=>[a.id,a])))},w=e=>t.htmlToSlack(e);return{onRequest:async e=>{if(e.path==="/auth")return Response.redirect(`https://linear-api-flow-dev.vercel.app/api/auth?api_endpoint=${t.serverOrigin}/api/plugin/${t.pluginSlug}/auth/callback`);if(e.path==="/auth/callback"){const n=await t.store.getPluginItem(p),{ok:r,...s}=e.body;if(!r)return console.log("❌ Slack auth callback failed - req.body.ok is false"),new Response("req.body.ok is false",{status:500});const a=await fetch(`https://slack.com/api/team.info?team=${s.team.id}`,{headers:{Authorization:`Bearer ${s.access_token??s.authed_user.access_token}`}}).then(async c=>await c.json()).catch(()=>null);if(!a)return console.log("❌ Slack auth callback failed - teamInfo.ok is false"),new Response("Couldn't get user's workspace info.",{status:500});const o={...s,created_at:new Date().toISOString(),team:{...s.team,...a.team}};return await t.store.setSecretItem(p,{...(n==null?void 0:n.value)??{},[o.team.id]:o}),new Response}return new Response},operations:{workspaces:async()=>{const e=await m().catch(()=>null);return e?{data:{workspaces:Object.entries(e).map(([n,r])=>({connectedAt:r.created_at,teamId:n,teamName:r.team.name,teamIcon:r.team.icon.image_44,teamAvatar:r.team.avatar_base_url}))}}:{data:{workspaces:[]}}},getChannels:async e=>{const n=await m().catch(()=>null),r=[];for(const s in n){const a=n[s],o=await fetch(`https://slack.com/api/conversations.list?token=${a.access_token}`,{headers:{Authorization:`Bearer ${a.access_token}`}}).then(async c=>await c.json()).catch(()=>null);o&&r.push(...o.channels.map(c=>({id:c.id,name:c.name,team:{id:a.team.id,name:a.team.name,icon:a.team.icon.image_44,avatar:a.team.avatar_base_url}})))}return{data:{channels:r}}},postMessage:async e=>{if(!e.channels.length)throw new t.GraphQLError("No channels provided.",{extensions:{code:"NO_CHANNELS_PROVIDED",userFriendlyMessage:"No channels selected. Please select at least one channel."}});const n=await m().catch(()=>null);if(!n)throw new t.GraphQLError("User not authenticated.",{extensions:{code:"NOT_AUTHENTICATED",userFriendlyMessage:"You are not authenticated and will need to connect your Slack account(s) first."}});const r=await f(e.message),s=t.parseHtml(e.message);s.querySelectorAll("slack-status").forEach(c=>{var u;const d=(u=t.decodeGlobalId(c.attributes["data-taskId"]))==null?void 0:u.id;if(!d)return;const i=parseInt(d);if(!i)return;const l=r.get(i);l&&c.replaceWith(k[l.status])});const a=w(s.toString()),o=[];for(const c of e.channels){const d=await fetch(`https://slack.com/api/chat.postMessage?token=${n[c.teamId].access_token}&channel=${c.channelId}&text=${a}`,{headers:{Authorization:`Bearer ${n[c.teamId].access_token}`}}).then(async i=>await i.json());if(!d.ok){const i=await fetch(`https://slack.com/api/conversations.info?token=${n[c.teamId].access_token}&channel=${c.channelId}`,{headers:{Authorization:`Bearer ${n[c.teamId].access_token}`}}).then(async l=>await l.json()).catch(()=>null);throw new t.GraphQLError("Couldn't post message.",{extensions:{code:"COULDNT_POST_MESSAGE",userFriendlyMessage:`Couldn't post message to channel ${(i==null?void 0:i.channels[0].name)??"Unknonwn"}. Please try connecting your Slack account again.`}})}o.push({teamId:c.teamId,channelId:c.channelId,ts:d.ts})}return{data:{ok:!0,messages:o}}},getRoutineStepInfo:async e=>{var a;const r=((a=(await t.store.getPluginItem(A).then(o=>(o==null?void 0:o.value)??{}))[e.routineStepId])==null?void 0:a.template)??_;return{data:{renderedTemplate:await t.renderTemplate(r,{jfdksl:null})}}}},onUpdateTaskStatusEnd:async e=>{const n=t.dayjs();await t.pgBoss.send(g,{date:n.toISOString()})},onAddRoutineStepEnd:async e=>{e.step.stepSlug===T&&await t.prisma.template.upsert({where:{slug:`${t.pluginSlug}-${e.step.stepSlug}`},create:{slug:`${t.pluginSlug}-${e.step.stepSlug}`,template:_,routineStepId:e.step.id},update:{routineStepId:e.step.id}})},handlebars:{helpers:{status:function(){return new t.Handlebars.SafeString(`<slack-status data-taskId="Task_${this.id}">${k[this.status]}</slack-status>`)}}},handlePgBossWork:e=>[e(g,async n=>{const r=n.data,s=await t.prisma.note.findFirst({where:{date:r.date}});if(!s)return;const a=t.parseHtml(s.content).querySelectorAll("slack-message").map(l=>({teamId:l.attributes["data-teamId"],channelId:l.attributes["data-channelId"],ts:l.attributes["data-ts"]}));if(!a.length)return;const o=await m().catch(()=>null);if(!o)return;const c=await f(s.content),d=t.parseHtml(s.content);d.querySelectorAll("slack-status").forEach(l=>{var S;const u=(S=t.decodeGlobalId(l.attributes["data-taskId"]))==null?void 0:S.id;if(!u)return;const h=parseInt(u);if(!h)return;const I=c.get(h);I&&l.replaceWith(k[I.status])});const i=w(d.toString());for(const l of a){const u=o[l.teamId],h=await fetch(`https://slack.com/api/chat.update?token=${u.access_token}&channel=${l.channelId}&ts=${l.ts}&text=${i}`,{headers:{Authorization:`Bearer ${o[l.teamId].access_token}`}});if(!h.ok){console.log("❌ Slack channel update failed - res.ok is false",h.status,h.statusText);continue}console.log("✅ Slack message update successful")}})]}});module.exports=E;
